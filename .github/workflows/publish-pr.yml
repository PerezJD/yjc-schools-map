name: publish-pull-request
run-name: ${{ github.actor }} is publishing a pull request
on: [push]
jobs:
  prerelease:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT

      - name: Get Pe-release name
        id: pr_name
        run: |
          git fetch --prune --all --depth=500
          git checkout --track origin/main
          LATEST_TAG=$(git describe --abbrev=0 --tags)
          COMMIT=$(git rev-parse --short HEAD)
          echo "name=${LATEST_TAG}-${COMMIT}" >> $GITHUB_OUTPUT
          git checkout "${{ steps.extract_branch.outputs.branch }}"
    outputs:
      pr_name: ${{ steps.pr_name.outputs.name }}

  compile:
    runs-on: ubuntu-latest
    needs: prerelease
    steps:
      - name: Get Pre-release Name
        id: set_pr_name
        run: echo "pre_release_name=yjc-schools-map-${{needs.prerelease.outputs.pr_name}}" >> $GITHUB_ENV

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build dist
        run: |
          npm install
          npm run build
          rm ./dist/assets/favicon.ico

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.pre_release_name }}
          path: dist/assets

  publish:
    runs-on: ubuntu-latest
    needs:
      - compile
      - prerelease
    steps:
      - name: Get Pre-release Name
        id: set_pr_name
        run: echo "pre_release_name=yjc-schools-map-${{needs.prerelease.outputs.pr_name}}" >> $GITHUB_ENV

      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.pre_release_name }}
          path: ${{ runner.temp }}/dist

      - name: Create tarball
        run: tar -czvf ${{ runner.temp }}/${{ env.pre_release_name }}.tar.gz ${{ runner.temp }}/dist

      - name: Upload GitHub Pages artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.pre_release_name }}
          path: ${{ runner.temp }}/${{ env.pre_release_name }}.tar
          retention-days: 5
          if-no-files-found: error
